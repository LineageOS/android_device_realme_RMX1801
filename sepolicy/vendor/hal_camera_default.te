typeattribute hal_camera_default data_between_core_and_vendor_violators;

allow hal_camera_default cam_proc:file { open read write getattr };
allow hal_camera_default hal_ktv_hwservice:hwservice_manager add;
allow hal_camera_default media_rw_data_file:dir { read open search };
allow hal_camera_default mnt_user_file:dir search;
allow hal_camera_default mnt_user_file:lnk_file r_file_perms;
allow hal_camera_default mnt_vendor_file:file { create read write open getattr };
allow hal_camera_default oppo_reserve_file:dir { search write add_name };
allow hal_camera_default oppoalgo_daemon:binder { call transfer };
allow hal_camera_default oppoalgo_service:service_manager find;
allow hal_camera_default oppo_reserve_file:file { create read write open getattr };
allow hal_camera_default oppo_reserve_media_file:dir { search write add_name };
allow hal_camera_default oppo_reserve_media_file:file { create read write open getattr };
allow hal_camera_default oppo_reserve_media_camera:dir { search write add_name };
allow hal_camera_default oppo_reserve_media_camera:file { create read write open getattr };
allow hal_camera_default persist_camera_file:dir { search write add_name };
allow hal_camera_default persist_camera_file:file { create read write open getattr setattr };
allow hal_camera_default sdcardfs:dir search;
allow hal_camera_default storage_file:dir search;
allow hal_camera_default storage_file:lnk_file r_file_perms;
allow hal_camera_default sysfs_graphics:file { read open };
allow hal_camera_default sysfs_leds:dir { search };
allow hal_camera_default sysfs_net:dir { search };
allow hal_camera_default sysfs_net:file { read open };
allow hal_camera_default sysfs:file { read open };

get_prop(hal_camera_default, vendor_camera_prop)
set_prop(hal_camera_default, vendor_camera_prop)

dontaudit hal_camera_default self:tcp_socket { create };
dontaudit hal_camera_default vendor_shell_exec:file { execute_no_trans };
